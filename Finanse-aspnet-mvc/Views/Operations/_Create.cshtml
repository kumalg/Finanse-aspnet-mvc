@using Finanse_aspnet_mvc.Models
@model Finanse_aspnet_mvc.Models.Operations.Operation

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">Nowa operacja</h4>
</div>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    
    <div class="modal-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsExpense, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsExpense)
                            @Html.ValidationMessageFor(model => model.IsExpense, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            <div class="form-group">
                <div class="btn-group" data-toggle="buttons">
                    <button class="btn btn-default active">
                        @Html.RadioButtonFor(model => model.IsExpense, true, new { @checked = true })Wydatek
                    </button>

                    <button class="btn btn-default">
                        @Html.RadioButtonFor(model => model.IsExpense, false)Wpływ
                    </button>
                </div>
                @Html.ValidationMessageFor(model => model.IsExpense, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(StackMoneyDb.CategoriesList(), "Id", "Name"), new { @class = "btn btn-default" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MoreInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MoreInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MoreInfo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VisibleInStatistics, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.VisibleInStatistics)
                        @Html.ValidationMessageFor(model => model.VisibleInStatistics, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>*@
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-default animate-button" data-dismiss="modal">Anuluj</button>
        <input class="btn btn-primary animate-button" type="submit" value="Dodaj" />
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
